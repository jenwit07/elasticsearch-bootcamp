openapi: 3.0.0
info:
  title: Todo API
  version: 1.0.0
  description: A simple Todo API with Elasticsearch and MongoDB
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /api/todos:
    get:
      summary: Get all todos
      tags:
        - Todos
      responses:
        200:
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      summary: Create a new todo
      tags:
        - Todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        201:
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Bad request
  /api/todos/{id}:
    get:
      summary: Get a todo by ID
      tags:
        - Todos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Todo ID
      responses:
        200:
          description: Todo object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        404:
          description: Todo not found
    put:
      summary: Update a todo
      tags:
        - Todos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Todo ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Bad request
    delete:
      summary: Delete a todo
      tags:
        - Todos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Todo ID
      responses:
        204:
          description: Todo deleted successfully
        500:
          description: Internal server error
  /api/todos/search:
    get:
      summary: Find todos by title
      tags:
        - Todos
      parameters:
        - in: query
          name: title
          required: true
          schema:
            type: string
          description: Todo title
      responses:
        200:
          description: List of todos matching the title
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
  /api/todos/init:
    get:
      summary: Initialize data with 5000 fake todos
      tags:
        - Todos
      responses:
        201:
          description: Data initialized successfully
        500:
          description: Internal server error
components:
  schemas:
    Todo:
      type: object
      required:
        - title
        - completed
      properties:
        id:
          type: string
          description: The auto-generated id of the todo
        title:
          type: string
          description: The title of the todo
        completed:
          type: boolean
          description: The completion status of the todo
      example:
        id: d5fE_asz
        title: Buy milk
        completed: false
